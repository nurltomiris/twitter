{"version":3,"sources":["utils/firebaseConfig.js","contexts/AuthContext.jsx","components/NavButton.jsx","layout/Header.jsx","layout/Layout.jsx","pages/notFound/NotFound.jsx","pages/addPost/AddPost.jsx","pages/auth/Auth.jsx","components/Post.jsx","router/routes.js","pages/home/Home.jsx","pages/profile/Profile.jsx","pages/postView/PostView.jsx","pages/myPosts/MyPosts.jsx","router/AppRouter.jsx","App.jsx","index.jsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","AuthContext","createContext","currentUser","signInWithGoogle","Promise","login","register","logout","useAuth","useContext","AuthContextProvider","children","useState","setCurrentUser","globalLoading","setGlobalLoading","useEffect","unsubscribe","onAuthStateChanged","user","Box","Provider","value","provider","GoogleAuthProvider","signInWithPopup","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","forgotPassword","sendPasswordResetEmail","url","NavButton","to","props","match","useMatch","style","textDecoration","Button","variant","sx","theme","color","palette","common","white","Header","AppBar","Container","maxWidth","Toolbar","Typography","component","flexGrow","onClick","Layout","my","NotFound","AddPost","title","setTitle","loading","setLoading","addToast","useToasts","handleAddPost","e","a","preventDefault","addDoc","collection","createdAt","Date","userId","uid","userEmail","then","res","appearance","Stack","onSubmit","spacing","TextField","onChange","target","multiline","rows","type","disabled","Auth","isRegister","useLocation","pathname","setEmail","setPassword","alignItems","display","justifyContent","Paper","width","p","fullWidth","margin","label","catch","message","finally","fetchRegister","fetchLogin","Divider","startIcon","Post","id","isEdit","updatePost","setIsEdit","navigate","useNavigate","newTitle","setNewTitle","Card","cursor","direction","fontWeight","typography","fontWeightBold","seconds","toLocaleString","IconButton","routes","element","posts","setPosts","q","query","unsub","onSnapshot","querySnapshot","postsFromDb","forEach","doc","push","data","map","post","private","path","onlyPublic","useParams","setPost","deleteLoading","setDeleteLoading","updateLoading","setUpdateLoading","getDocument","useCallback","docRef","getDoc","docSnap","exists","flexDirection","mb","deleteDoc","ml","prev","updateDoc","result","where","AppRouter","route","index","App","require","config","ReactDOM","render","CssBaseline","basename","autoDismiss","placement","document","getElementById"],"mappings":"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","file":"static/js/main.d747f11d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n//Настройка firebase\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);","import { Box } from \"@mui/material\";\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    GoogleAuthProvider,\r\n    onAuthStateChanged,\r\n    sendPasswordResetEmail,\r\n    signInWithEmailAndPassword,\r\n    signInWithPopup,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../utils/firebaseConfig\";\r\n\r\nconst AuthContext = createContext({\r\n    currentUser: null,\r\n    signInWithGoogle: () => Promise,\r\n    login: () => Promise,\r\n    register: () => Promise,\r\n    logout: () => Promise,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [globalLoading, setGlobalLoading] = useState(true);\r\n    useEffect(() => {\r\n        setGlobalLoading(true);\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            setCurrentUser(user ? user : null);\r\n            setGlobalLoading(false);\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    function register(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    function forgotPassword(email) {\r\n        return sendPasswordResetEmail(auth, email, {\r\n            url: `http://localhost:3000/login`\r\n        });\r\n    }\r\n\r\n    function logout() {\r\n        return signOut(auth);\r\n    }\r\n\r\n    function signInWithGoogle() {\r\n        const provider = new GoogleAuthProvider();\r\n        return signInWithPopup(auth, provider);\r\n    }\r\n\r\n    if (globalLoading) {\r\n        return <Box>Loading...</Box>;\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={ {\r\n                currentUser,\r\n                signInWithGoogle,\r\n                login,\r\n                register,\r\n                logout,\r\n                forgotPassword\r\n            } }\r\n        >\r\n            { children }\r\n        </AuthContext.Provider>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link, useMatch } from \"react-router-dom\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst NavButton = ({ children, to, ...props }) => {\r\n    const match = useMatch(to);\r\n\r\n    return (\r\n        <Link to={ to } { ...props } style={ { textDecoration: \"none\" } }>\r\n            <Button\r\n                variant=\"text\"\r\n                sx={ theme => ({\r\n                    color: theme.palette.common.white,\r\n                    textDecoration: match ? \"underline\" : \"none\"\r\n                }) }\r\n            >\r\n                { children }\r\n            </Button>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default NavButton;","import { AppBar, Button, Container, Toolbar, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavButton from \"../components/NavButton\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst Header = () => {\r\n\r\n    const { currentUser, logout } = useAuth();\r\n\r\n    return (\r\n        <AppBar>\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" component=\"div\" sx={ { flexGrow: 1 } }>\r\n                        <Link to=\"/\" style={ { textDecoration: \"none\", color: \"#fff\" } }>\r\n                            Twitter\r\n                        </Link>\r\n                    </Typography>\r\n                    {\r\n                        currentUser ?\r\n                            <>\r\n                                <NavButton to=\"/profile\">Profile</NavButton>\r\n                                <NavButton to=\"/my-posts\">My Posts</NavButton>\r\n                                <NavButton to=\"/add-post\">Add post</NavButton>\r\n                                <Button\r\n                                    sx={ {\r\n                                        color: theme => theme.palette.common.white\r\n                                    } }\r\n                                    onClick={ logout }\r\n                                >\r\n                                    Logout\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <NavButton to=\"/login\">Login</NavButton>\r\n                                <NavButton to=\"/register\">Register</NavButton>\r\n                            </>\r\n                    }\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;","import { Container } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Container maxWidth=\"xl\" sx={ { my: \"78px\" } }>\r\n                <Outlet/>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import { Button, Stack, TextField } from \"@mui/material\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../utils/firebaseConfig\";\r\n\r\n//Компонент добавления поста\r\nconst AddPost = () => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const { currentUser } = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n    const { addToast } = useToasts();\r\n    const handleAddPost = async e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        await addDoc(collection(db, \"posts\"), {\r\n            title,\r\n            createdAt: new Date(),\r\n            userId: currentUser.uid,\r\n            userEmail: currentUser.email\r\n        })\r\n        .then(res => {\r\n            addToast(\"Post added successfully\", { appearance: \"success\" });\r\n        });\r\n        setLoading(false);\r\n        setTitle(\"\");\r\n    };\r\n\r\n    return (\r\n        <Stack component=\"form\" onSubmit={ handleAddPost } spacing={ 2 }>\r\n            <TextField\r\n                value={ title }\r\n                onChange={ e => setTitle(e.target.value) }\r\n                multiline\r\n                rows={ 4 }\r\n            />\r\n            <Button type=\"submit\" disabled={ loading } variant=\"contained\">Create post</Button>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AddPost;","import GoogleIcon from \"@mui/icons-material/Google\";\r\nimport { Box, Button, Divider, Paper, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\n//Страница авторизации и регистрации\r\nconst Auth = () => {\r\n\r\n    const { register, signInWithGoogle, login } = useAuth();\r\n    const { addToast } = useToasts();\r\n    const location = useLocation();\r\n    const isRegister = location.pathname === \"/register\";\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchRegister = (email, password) => {\r\n        setLoading(true);\r\n\r\n        register(email, password)\r\n        .catch((e) => {\r\n            addToast(e.message, { appearance: \"error\" });\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchLogin = (email, password) => {\r\n        setLoading(true);\r\n\r\n        login(email, password)\r\n        .catch((e) => {\r\n            addToast(e.message, { appearance: \"error\" });\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const fetchLoginWithGoogle = () => {\r\n        setLoading(true);\r\n\r\n        signInWithGoogle()\r\n        .catch((e) => {\r\n            addToast(e.message, { appearance: \"error\" });\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Stack spacing={ 2 } alignItems=\"center\">\r\n            <Typography variant=\"h3\">{ isRegister ? \"Register\" : \"Login\" }</Typography>\r\n            <Box\r\n                sx={ {\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\"\r\n                } }\r\n            >\r\n                <Paper\r\n                    sx={ {\r\n                        width: 600,\r\n                        p: 2\r\n                    } }\r\n                >\r\n                    <Box component=\"form\">\r\n                        <TextField\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            label=\"Email\"\r\n                            value={ email }\r\n                            onChange={ e => setEmail(e.target.value) }\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            value={ password }\r\n                            onChange={ e => setPassword(e.target.value) }\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={ {\r\n                                my: 2\r\n                            } }\r\n                            onClick={ () => isRegister ? fetchRegister(email, password) : fetchLogin(email, password) }\r\n                            disabled={ loading }\r\n                        >\r\n                            { isRegister ? \"Sign Up\" : \"Sign In\" }\r\n                        </Button>\r\n                    </Box>\r\n                    <Divider sx={ { my: 2 } }><Typography>OR</Typography></Divider>\r\n                    <Box\r\n                        sx={ {\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        } }\r\n                    >\r\n                        <Button\r\n                            startIcon={ <GoogleIcon/> }\r\n                            variant=\"contained\"\r\n                            onClick={ fetchLoginWithGoogle }\r\n                            disabled={ loading }\r\n                        >\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default Auth;","import CheckIcon from \"@mui/icons-material/Check\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, Card, IconButton, Stack, TextField, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Post = ({ id, createdAt, title, userEmail, isEdit, updatePost, setIsEdit }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [newTitle, setNewTitle] = useState(title);\r\n    const goToPostView = () => {\r\n        navigate(`/post/${ id }`);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={ {\r\n                width: 600,\r\n                p: 2,\r\n                cursor: \"pointer\"\r\n            } }\r\n            onClick={ goToPostView }\r\n        >\r\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Typography\r\n                    sx={ theme => ({\r\n                        fontWeight: theme.typography.fontWeightBold\r\n                    }) }\r\n                >\r\n                    { userEmail }\r\n                </Typography>\r\n                <Typography>\r\n                    { new Date(createdAt.seconds * 1000).toLocaleString() }\r\n                </Typography>\r\n            </Stack>\r\n            <Box>\r\n                {\r\n                    isEdit ?\r\n                        <Stack\r\n                            component=\"form\"\r\n                            onSubmit={ e => {\r\n                                e.preventDefault();\r\n                                updatePost(newTitle);\r\n                            } }\r\n                            direction=\"row\"\r\n                            alignItems=\"center\"\r\n                            spacing={ 1 }\r\n                        >\r\n                            <TextField value={ newTitle } onChange={ e => setNewTitle(e.target.value) }/>\r\n                            <IconButton type=\"submit\">\r\n                                <CheckIcon/>\r\n                            </IconButton>\r\n                            <IconButton onClick={ () => setIsEdit(false) }>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                        </Stack>\r\n                        :\r\n                        title\r\n                }\r\n            </Box>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Post;","import AddPost from \"../pages/addPost/AddPost\";\r\nimport Auth from \"../pages/auth/Auth\";\r\nimport Home from \"../pages/home/Home\";\r\nimport MyPosts from \"../pages/myPosts/MyPosts\";\r\nimport PostView from \"../pages/postView/PostView\";\r\nimport Profile from \"../pages/profile/Profile\";\r\n\r\n//Все роуты приложения\r\nexport const routes = [\r\n    {\r\n        element: Home,\r\n        private: false\r\n    },\r\n    {\r\n        element: Profile,\r\n        path: \"profile\",\r\n        private: true\r\n    },\r\n    {\r\n        element: Auth,\r\n        path: \"login\",\r\n        private: false,\r\n        onlyPublic: true\r\n    },\r\n    {\r\n        element: Auth,\r\n        path: \"register\",\r\n        private: false,\r\n        onlyPublic: true\r\n    },\r\n    {\r\n        element: AddPost,\r\n        path: \"add-post\",\r\n        private: true\r\n    },\r\n    {\r\n        element: PostView,\r\n        path: \"post/:id\",\r\n        private: false\r\n    },\r\n    {\r\n        element: MyPosts,\r\n        path: \"my-posts\",\r\n        private: true\r\n    }\r\n];","import { Box, Stack, Typography } from \"@mui/material\";\r\nimport { collection, onSnapshot, query } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Post from \"../../components/Post\";\r\nimport { db } from \"../../utils/firebaseConfig\";\r\n\r\n//Главная страница со всеми постами\r\nconst Home = () => {\r\n\r\n    const [posts, setPosts] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const q = query(collection(db, \"posts\"));\r\n        const unsub = onSnapshot(q, querySnapshot => {\r\n            const postsFromDb = [];\r\n            querySnapshot.forEach(doc => {\r\n                postsFromDb.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            setPosts(postsFromDb);\r\n            setLoading(false);\r\n        });\r\n        return () => unsub();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack direction=\"column\" spacing={ 3 } alignItems=\"center\">\r\n            <Typography variant=\"h4\">Все посты</Typography>\r\n            {\r\n                loading && <Box>Loading...</Box>\r\n            }\r\n            {\r\n                posts && posts.map(post => <Post key={ post.id } { ...post }/>)\r\n            }\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\n//Компонент профиля\r\nconst Profile = () => {\r\n\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <div>\r\n            {currentUser && currentUser.email}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Box, Button } from \"@mui/material\";\r\nimport { deleteDoc, doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Post from \"../../components/Post\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../utils/firebaseConfig\";\r\n\r\n//Компонент страницы с отдельным постом\r\nconst PostView = () => {\r\n    let { id } = useParams();\r\n\r\n    const [post, setPost] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const { addToast } = useToasts();\r\n    const navigate = useNavigate();\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [updateLoading, setUpdateLoading] = useState(false);\r\n\r\n    const getDocument = useCallback(\r\n        async() => {\r\n            const docRef = doc(db, \"posts\", id);\r\n            const docSnap = await getDoc(docRef);\r\n\r\n            if (docSnap.exists()) {\r\n                setPost({ ...docSnap.data(), id: docSnap.id });\r\n            } else {\r\n                setPost(null);\r\n            }\r\n            setLoading(false);\r\n        },\r\n        [id]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getDocument();\r\n    }, [getDocument]);\r\n\r\n    const deletePost = () => {\r\n        setDeleteLoading(true);\r\n        deleteDoc(doc(db, \"posts\", post.id))\r\n        .then(() => {\r\n            addToast(\"Пост успешно удален\", { appearance: \"success\" });\r\n            navigate(\"/my-posts\");\r\n        })\r\n        .catch(e => {\r\n            addToast(e.message, { appearance: \"error\" });\r\n        })\r\n        .finally(() => {\r\n            setDeleteLoading(false);\r\n        });\r\n    };\r\n\r\n    const updatePost = (newTitle) => {\r\n        setUpdateLoading(true);\r\n        updateDoc(doc(db, \"posts\", post.id), { title: newTitle })\r\n        .then((result) => {\r\n            setLoading(true);\r\n            getDocument();\r\n            addToast(\"Пост успешно обновлен\", { appearance: \"success\" });\r\n        })\r\n        .catch(e => {\r\n            addToast(e.message, { appearance: \"error\" });\r\n        })\r\n        .finally(() => {\r\n            setUpdateLoading(false);\r\n            setIsEdit(false);\r\n        });\r\n    };\r\n\r\n    if (loading) {\r\n        return <Box>Loading...</Box>;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={ {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n            } }\r\n        >\r\n            {\r\n                !post\r\n                    ?\r\n                    <Box>Ошибка</Box>\r\n                    :\r\n                    <Box>\r\n                        {\r\n                            currentUser?.uid === post.userId &&\r\n                            <Box\r\n                                sx={ {\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"row-reverse\",\r\n                                    mb: 2\r\n                                } }\r\n                            >\r\n                                <Button\r\n                                    disabled={ deleteLoading }\r\n                                    onClick={ deletePost }\r\n                                    variant=\"contained\"\r\n                                    sx={{\r\n                                        ml: 2\r\n                                    }}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    disabled={ updateLoading }\r\n                                    onClick={ () => setIsEdit(prev => !prev) }\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                            </Box>\r\n                        }\r\n                        <Post isEdit={ isEdit } setIsEdit={ setIsEdit } updatePost={ updatePost } { ...post }/>\r\n                    </Box>\r\n            }\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PostView;","import { Box, Stack } from \"@mui/material\";\r\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Post from \"../../components/Post\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { db } from \"../../utils/firebaseConfig\";\r\n\r\n//Посты авторизированного юзера\r\nconst MyPosts = () => {\r\n\r\n    const { currentUser } = useAuth();\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        const q = query(collection(db, \"posts\"), where(\"userId\", \"==\", currentUser.uid));\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const postsFromDb = [];\r\n            querySnapshot.forEach((doc) => {\r\n                postsFromDb.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            setPosts(postsFromDb);\r\n            setLoading(false)\r\n        });\r\n        return () => unsubscribe();\r\n    }, [currentUser.uid]);\r\n\r\n    if(loading){\r\n        return <Box>Loading...</Box>\r\n    }\r\n    return (\r\n        <Stack direction=\"column\" spacing={ 3 } alignItems=\"center\">\r\n            {posts && posts.map(post => <Post key={post.id} {...post}/>)}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Layout from \"../layout/Layout\";\r\nimport NotFound from \"../pages/notFound/NotFound\";\r\nimport { routes } from \"./routes\";\r\n\r\n//Компонент управляет роутами\r\nconst AppRouter = () => {\r\n\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={ <Layout/> }>\r\n                {\r\n                    routes.map((route, index) => {\r\n                        let element;\r\n\r\n                        //Если роут приватный\r\n                        if (route.private) {\r\n                            //Если пользовтель авторизован, то прокидываем роут\r\n                            if (currentUser) {\r\n                                element = <route.element/>;\r\n                            } else {\r\n                                //иначе на начальную страницу\r\n                                element = <Navigate to=\"/\"/>;\r\n                            }\r\n                        } else {\r\n                            //если роут не приватный, то пропускаем юзера\r\n                            element = <route.element/>;\r\n                        }\r\n\r\n                        if (route.onlyPublic) {\r\n                            if (currentUser) {\r\n                                element = <Navigate to=\"/\"/>;\r\n                            } else {\r\n                                element = <route.element/>;\r\n                            }\r\n                        }\r\n\r\n                        return <Route\r\n                            key={ index }\r\n                            index={ !route.path }\r\n                            element={ element }\r\n                            path={ route.path }\r\n                        />;\r\n                    })\r\n                }\r\n                <Route path=\"*\" element={ <NotFound/> }/>\r\n            </Route>\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React from \"react\";\nimport AppRouter from \"./router/AppRouter\";\nimport { AuthContextProvider } from \"./contexts/AuthContext\";\n\nfunction App() {\n    return (\n        <AuthContextProvider>\n            <AppRouter/>\n        </AuthContextProvider>\n    );\n}\n\nexport default App;\n","import { CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport App from \"./App\";\n\nrequire(\"dotenv\")\n.config();\n\nReactDOM.render(\n    <>\n        <CssBaseline/>\n        <HashRouter basename={\"/\"}>\n            <ToastProvider autoDismiss={ true } placement={ \"bottom-center\" }>\n                <App/>\n            </ToastProvider>\n        </HashRouter>\n    </>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}